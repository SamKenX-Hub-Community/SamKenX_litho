"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6710],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>u,mdx:()=>h,useMDXComponents:()=>s,withMDXComponents:()=>c});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r.apply(this,arguments)}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=o.createContext({}),c=function(e){return function(n){var t=s(n.components);return o.createElement(e,r({},n,{components:t}))}},s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,m=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(t),u=a,d=c["".concat(m,".").concat(u)]||c[u]||b[u]||r;return t?o.createElement(d,l(l({ref:n},p),{},{components:t})):o.createElement(d,l({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,m=new Array(r);m[0]=f;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[d]="string"==typeof e?e:a,m[1]=l;for(var p=2;p<r;p++)m[p]=t[p];return o.createElement.apply(null,m)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},47675:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>b,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var o=t(87462),a=t(63366),r=(t(67294),t(3905)),m=["components"],l={id:"mountable-component",title:"Creating a Mountable Component"},i=void 0,p={unversionedId:"mainconcepts/mountablecomponents/mountable-component",id:"mainconcepts/mountablecomponents/mountable-component",title:"Creating a Mountable Component",description:"Mountable Components can be used to render views or drawables on the screen.",source:"@site/../docs/mainconcepts/mountablecomponents/mountable-component.mdx",sourceDirName:"mainconcepts/mountablecomponents",slug:"/mainconcepts/mountablecomponents/mountable-component",permalink:"/docs/mainconcepts/mountablecomponents/mountable-component",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/mainconcepts/mountablecomponents/mountable-component.mdx",tags:[],version:"current",frontMatter:{id:"mountable-component",title:"Creating a Mountable Component"},sidebar:"mainSidebar",previous:{title:"Overview",permalink:"/docs/mainconcepts/mountablecomponents/overview"},next:{title:"Lifecycle of a SimpleMountable",permalink:"/docs/mainconcepts/mountablecomponents/mountable"}},c={},s=[{value:"Comparison with KComponents",id:"comparison-with-kcomponents",level:2},{value:"Creating a Mountable Component",id:"creating-a-mountable-component",level:2}],u={toc:s},d="wrapper";function b(e){var n=e.components,t=(0,a.Z)(e,m);return(0,r.mdx)(d,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Mountable Components can be used to render views or drawables on the screen."),(0,r.mdx)("h2",{id:"comparison-with-kcomponents"},"Comparison with KComponents"),(0,r.mdx)("p",null,"There are several similarities between Mountable Components and ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/components-basics"},"KComponents"),":"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"They both consist of a render function that can use the component's ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/props"},"props")," and ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/hooks-intro"},"hooks"),"."),(0,r.mdx)("li",{parentName:"ul"},"As with KComponents, mountable components are subject to ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/components-basics/#rules-for-components"},"rules")," for their use."),(0,r.mdx)("li",{parentName:"ul"},"Just like KComponents, mountable components can be configured using common props and state.")),(0,r.mdx)("h2",{id:"creating-a-mountable-component"},"Creating a Mountable Component"),(0,r.mdx)("p",null,"The following example shows a Mountable Component that will return a 'mountable' that creates an 'ImageView' to be rendered on the screen."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/kotlin/mountables/SimpleImageViewComponent.kt start=start_simple_mountable_component_example end=end_simple_mountable_component_example",file:"sample/src/main/java/com/facebook/samples/litho/kotlin/mountables/SimpleImageViewComponent.kt",start:"start_simple_mountable_component_example",end:"end_simple_mountable_component_example"},"class SimpleImageViewComponent(private val style: Style? = null) : MountableComponent() {\n\n  override fun MountableComponentScope.render(): MountableRenderResult {\n    return MountableRenderResult(SimpleImageViewMountable(), style)\n  }\n}\n")),(0,r.mdx)("p",null,"A Mountable represents a reusable unit responsible for hosting the logic to create, measure, and bind the content that the Mountable Component will render. For more information, see the ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/mountablecomponents/mountable"},"Lifecycle of a SimpleMountable")," page."),(0,r.mdx)("p",null,"As can be seen from the above example, the ",(0,r.mdx)("inlineCode",{parentName:"p"},"render()")," function returns:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"A ",(0,r.mdx)("inlineCode",{parentName:"li"},"MountableRenderResult")," object that contains a 'Mountable' to be rendered"),(0,r.mdx)("li",{parentName:"ul"},"A ",(0,r.mdx)("inlineCode",{parentName:"li"},"style")," object that is applied to the mountable component.")),(0,r.mdx)("admonition",{type:"note"},(0,r.mdx)("p",{parentName:"admonition"},"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"render()")," method can be invoked from multiple threads. You should ",(0,r.mdx)("strong",{parentName:"p"},"not")," assume it can only be called from the main thread. The implementation of render should not cause side effects; essentially, it acts like a pure function.")))}b.isMDXComponent=!0}}]);